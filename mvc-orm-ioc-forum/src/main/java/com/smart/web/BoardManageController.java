/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smart.web;


import com.smart.cons.CommonConstant;
import com.smart.core.ioc.annotations.Autowired;
import com.smart.core.ioc.annotations.Controller;
import com.smart.core.mvc.annotationhandlers.RequestMethod;
import com.smart.core.mvc.ModelAndView;
import com.smart.core.mvc.annotations.PathVariable;
import com.smart.core.mvc.annotations.RequestMapping;
import com.smart.core.mvc.annotations.RequestParam;
import com.smart.dao.Page;
import com.smart.domain.Board;
import com.smart.domain.Post;
import com.smart.domain.Topic;
import com.smart.domain.User;
import com.smart.service.ForumService;

import javax.servlet.http.HttpServletRequest;
import java.util.Date;

@Controller
public class BoardManageController extends BaseController {

	private ForumService forumService;

	@Autowired
	public void setForumService(ForumService forumService) {
		this.forumService = forumService;
	}

	/**
	 * 列出论坛模块下的主题帖子
	 * 
	 * @param boardId
	 * @return
	 */
	@RequestMapping(value = "/boards/{boardId}", method = RequestMethod.GET)
	//url换成restful风格应该类似 board/BoardTopics/{boardId}
	public ModelAndView listBoardTopics(@PathVariable String boardId,@RequestParam(value = "pageNo") Integer pageNo)  throws Exception {
		Integer boardId1 = Integer.valueOf(boardId);
		try {
			ModelAndView view = new ModelAndView();
			Board board = forumService.getBoardById(boardId1);
			pageNo = pageNo == null ? 1 : pageNo;
			Page pagedTopic = forumService.getPagedTopics(boardId1, pageNo,
					CommonConstant.PAGE_SIZE);
			view.addObject("board", board);
			view.addObject("pagedTopic", pagedTopic);
			view.setViewName("/listBoardTopics");
			return view;
		}catch (Exception e){
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * 删除版块
	 */
	@RequestMapping(value = "/boards/{boardId}", method = RequestMethod.DELETE)//这边url改了
	public String removeBoard(@PathVariable String boardId)  throws Exception {
		String[] arrIds = boardId.split(",");
		for (int i = 0; i < arrIds.length; i++) {
			forumService.removeBoard(new Integer(arrIds[i]));
		}
		String targetUrl = "/index.html";
		return "redirect:"+targetUrl;
	}

	/**
	 * 添加主题帖页面
	 * 
	 * @param boardId
	 * @return
	 */
	//@RequestMapping(value = "/board/addTopicPage-{boardId}", method = RequestMethod.GET)
	@RequestMapping(value = "/boards/{boardId}/topics", method = RequestMethod.POST)
	///board/{boardId}/TopicPage http方法是post
	public ModelAndView addTopicPage(@PathVariable Integer boardId)  throws Exception {
		ModelAndView view =new ModelAndView();
		view.addObject("boardId", boardId);
		view.setViewName("/addTopic");
		return view;
	}

	/**
	 * 添加一个主题帖
	 * 
	 * @param request
	 * @param topic
	 * @return
	 */
	@RequestMapping(value = "/board/addTopic", method = RequestMethod.POST)
	public String addTopic(HttpServletRequest request, Topic topic)  throws Exception {
		User user = getSessionUser(request);
		topic.setUser(user);
		Date now = new Date();
		topic.setCreateTime(now);
		topic.setLastPost(now);
		forumService.addTopic(topic);
		String targetUrl = "/boards/" + topic.getBoardId();
		return "redirect:"+targetUrl;
	}

	/**
	 * 列出主题的所有帖子
	 * 
	 * @param topicId
	 * @return
	 */
	@RequestMapping(value = "/boards/{boardId}/topics/{topicId}", method = RequestMethod.GET)
	public ModelAndView listTopicPosts(@PathVariable Integer topicId,@RequestParam(value = "pageNo") Integer pageNo,@PathVariable String boardId)  throws Exception {
		try {
			ModelAndView view = new ModelAndView();
			Topic topic = forumService.getTopicByTopicId(topicId);
			pageNo = pageNo == null ? 1 : pageNo;
			Page pagedPost = forumService.getPagedPosts(topicId, pageNo,
					CommonConstant.PAGE_SIZE);
			// 为回复帖子表单准备数据
			view.addObject("topic", topic);
			view.addObject("pagedPost", pagedPost);
			view.setViewName("/listTopicPosts");
			return view;
		}catch (Exception e){
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * 回复主题
	 * 
	 * @param request
	 * @param post
	 * @return
	 */
	@RequestMapping(value = "/boards/{boardId}/topics/{topicId}", method = RequestMethod.POST)
	public String addPost(HttpServletRequest request, Post post, @PathVariable String topicId, @PathVariable String boardId)  throws Exception {
			post.setCreateTime(new Date());
			post.setUser(getSessionUser(request));
			Topic topic = new Topic();
			int topicIda = Integer.valueOf(request.getParameter("topicId"));//jsp listTopicPosts那里请求参数 topic.topicId 自己改成 topicId 就对了
			//
			if (topicIda > 0) {
				topic.setTopicId(topicIda);
				post.setTopic(topic);
			}
			forumService.addPost(post);
			String targetUrl = "/boards/" + boardId + "/topics/"
					+ post.getTopic().getTopicId();
			return "redirect:" + targetUrl;
	}///boards/${board.boardId}/topics

	/**
	 * 删除主题
	 */
	@RequestMapping(value = "/boards/{boardId}/topics/{topicId}", method = RequestMethod.DELETE)
	public String removeTopic(@PathVariable String topicId,@PathVariable String boardId)  throws Exception {
		String[] arrIds = topicId.split(",");
		for (int i = 0; i < arrIds.length; i++) {
			forumService.removeTopic(new Integer(arrIds[i]));
		}
		String targetUrl = "/boards/" + boardId;
		return "redirect:"+targetUrl;
	}

	/**
	 * 设置精华帖
	 */
	@RequestMapping(value = "/boards/{boardId}/topics/{topicId}", method = RequestMethod.PATCH)
	public String makeDigestTopic(@PathVariable String topicId,@PathVariable String boardId)  throws Exception {
		String[] arrIds = topicId.split(",");
		for (int i = 0; i < arrIds.length; i++) {
			forumService.makeDigestTopic(new Integer(arrIds[i]));
		}
		String targetUrl = "/boards/" + boardId;
		return "redirect:"+targetUrl;
	}
}
